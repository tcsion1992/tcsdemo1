
# -------------------------------------------------------------------
#
# This is the configuration file for Torque.
#
# Note that strings containing "," (comma) characters must backslash
# escape the comma (i.e. '\,')
#
# -------------------------------------------------------------------
#
#  T O R Q U E  P R O P E R T I E S
#
# -------------------------------------------------------------------
# These are your database settings. Look in the
# org.apache.torque.pool.* packages for more information.
#
# The parameters to connect to the default database.  You MUST
# configure these properly.
# -------------------------------------------------------------------



#
# For JNDI configuration please see: https://db.apache.org/torque/torque-4.0/documentation/orm-reference/initialisation-configuration.html
# 
#
torque.dsfactory.turbine.factory=org.apache.torque.dsfactory.JndiDataSourceFactory
torque.dsfactory.turbine.jndi.path=java:comp/env/jdbc/turbine
torque.dsfactory.turbine.jndi.ttl=300000

# -------------------------------------------------------------------
#
# Shared Pool Data Source Factory
#
# -------------------------------------------------------------------
#torque.database.default=turbine
torque.database.turbine.adapter=auto

#torque.database.turbine.user=db_user
#torque.database.turbine.password=db_password
#
#torque.defaults.pool.maxActive =       	30
#torque.defaults.pool.testOnBorrow =    	true
#torque.defaults.pool.validationQuery = 	SELECT 1
#
#torque.defaults.connection.driver =    	com.mysql.jdbc.Driver
#torque.defaults.connection.url =       	jdbc:mysql://localhost:3306/turbine
#torque.defaults.connection.user =      	db_user
#torque.defaults.connection.password =  	db_password
#
#torque.dsfactory.turbine.connection.driver =    	com.mysql.jdbc.Driver
#torque.dsfactory.turbine.connection.url =       	jdbc:mysql://localhost:3306/turbine
#torque.dsfactory.turbine.connection.user =      	db_user
#torque.dsfactory.turbine.connection.password =  	db_password
#torque.dsfactory.turbine.factory=org.apache.torque.dsfactory.SharedPoolDataSourceFactory
# -------------------------------------------------------------------

# Determines if the quantity column of the IDBroker's id_table should
# be increased automatically if requests for ids reaches a high
# volume.

torque.idbroker.cleverquantity=true

# Determines whether the managers cache instances of the business objects.
# And also whether the MethodResultCache will really cache results.
torque.manager.useCache = true

# Determines if IDBroker should prefetch IDs or not.  If set to false
# this property has the effect of shutting off the housekeeping thread
# that attempts to prefetch the id's.  It also sets the # of id's grabbed
# per request to 1 regardless of the settings in the database.
# Default: true
torque.idbroker.prefetch = true

# Controls the starting id of table entries when creating SQL for 
# the id-table. If you have two projects that use the same id-table 
# in the same database with different tables, make sure that they have 
# different initialID settings and the ranges (initialID is incremented 
# for every new table) don't overlap.
torque.idbroker.initialId = 101 

# The start value of the ID broker for supplying IDs to Torque. This value 
# is incremented every time Torque requests ID keys from the broker. If you 
# pre-load your table straight from SQL, make sure that you don't accidentially 
# overlap with this setting, because Torque doesn't keep record of what IDs are 
# already taken in the database. If you overlap, inserting new objects will fail 
# because the ID assigned by Torque is already taken.
torque.idBroker.initialIdValue = 100

# For performance reasons, the ID Broker does not request a single ID at a time
# but fetches a whole range and increments the current next ID Value in the ID
# Table by this step. If you have to do lots of inserts straight in a row, increment
# this value to get slightly better performance.
torque.idbroker.initialIdStep = 500

# IDBroker can grab its own connection from the pool to use when retrieving
# more id's to minimize the amount of time ID_TABLE will be locked.
# Some usage of IDBroker or assumptions made by connection pools or jdbc
# drivers may disallow this optimization in which case the property
# should be set to false.
torque.idbroker.usenewconnection = true

# Comment if not using shared data source factory
torque.database.default=turbine





